=General Features=

=== Filename Parsing===

When an archive is opened, and it has no tags, ComicTagger will attempt to parse the filename to glean some information.  Generally, it expects a format similar to this:

{{{
SERIES_NAME vVOLNUM ISSUENUM (of COUNT) (YEAR).ext
}}}

i.e.

{{{
Plastic Man v1 002 (1942).cbz
Blue Beetle 02.cbr
Crazy Weird Comics 2 (of 2) (1969).rar
}}}

The cleaner the original filename is, the better ComicTagger is at matching online.

===Auto-Select===

ComicTagger uses an image processing technique to compare the cover image of an archive with images found online to determine the correct metadata.  When an online search and auto-select is attempted, ComicTagger will use the series name, issue number, and optionally the publication year to find the best match.  Once the list of possibilities is narrowed, it will compare cover images to find the right choice.  

Obstacles to this process are alternate covers, duplicate covers ( such as multiple editions with the same numbering and virtually identical covers), improperly or poorly named files, and mis-sequenced cover images in the archive.

The settings allow the user to mitigate some of these problems by blacklisting certain publishers, and narrowing the name matching.

===Caching===

ComicTagger caches online search results and images from ComicVine in a temporary database to improve speed when doing similar searches repeatedly. 

=== RAR Tools ===

In order to read and write RAR and CBR archives, you will need to download tools from WinRAR ( http://www.win-rar.com/download.html).  See the setting dialog of the GUI.

===Rename===

TBD

= GUI User Guide =

The GUI is for the most part pretty intuitive.  You open a file via the menu, or by drag-and-drop, edit the tag fields, and save.  But a some portions deserve a few words.

=== Tag Style Drop-down ===

The "Tag Style" drop-down selection in the upper corner selects how the tags will be saved.  When the style is changed, certain entry fields will change color, and go inactive if those fields won't be saved for the selected style.  For example, the ComicRack tag style doesn't support a field for "Country", so that entry control will be marked red, and made inactive.

This drop-down also affects which tag block will be read in when the user selects the menu choice to "Reload Select Tag Block"

===Page Browser===

Double-clicking on the cover image, or selecting the Page Browser menu option/toolbar button will bring up a very simple page broswer.  It's meant to allow the user to to inspect pages of the archive to glean hints about metadata, and is in no way meant to be a comic reader.


= CLI User Guide =

ComicTagger supports a powerful command-line interface that can be used for batch processing of archives.

On the command-line just invoke the main executable with options.   

On Windows the executable path should be something like this:

<code language="bat">
C:\Program Files\ComicTagger\comictagger.exe
</code>

On Mac something like this:
<code language="sh">
/Applications/ComicTagger.app/Contents/MacOS/ComicTagger
</code>

If running from python source, just run "comictagger.py"

Here is the help message:
<code language="txt">
Usage: comictagger.py [OPTION]... [FILE LIST]

A utility for reading and writing metadata to comic archives.

If no options are given, comictagger.py will run in windowed mode

  -p, --print                Print out tag info from file.  Specify type
                             (via -t) to get only info of that tag type
      --raw                  With -p, will print out the raw tag block(s)
                             from the file
  -d, --delete               Deletes the tag block of specified type (via -t)
  -s, --save                 Save out tags as specified type (via -t)
                             Must specify also at least -o, -p, or -m
  -n, --dryrun               Don't actually modify file (only relevent for -d, -s, or -r)
  -t, --type=TYPE            Specify TYPE as either "CR" or "CBL", (as either 
                             ComicRack or ComicBookLover style tags, respectivly)
  -f, --parsefilename        Parse the filename to get some info, specifically
                             series name, issue number, volume, and publication 
                             year
  -o, --online               Search online and attempt to identify file using 
                             existing metadata and images in archive. May be used
                             in conjuntion with -f and -m
  -m, --metadata=LIST        Explicity define, as a list, some tags to be used                           
                                e.g. "series=Plastic Man , publisher=Quality Comics"
                                     "series=Kickers^, Inc., issue=1, year=1986"
                             Name-Value pairs are comma separated.  Use a "^" to 
                             escape an "=" or a ",", as shown in the example above
                             Some names that can be used:
                                 series, issue, issueCount, year, publisher, title
  -r, --rename               Rename the file based on specified tag style.
      --noabort              Don't abort save operation when online match is of low confidence  
  -v, --verbose              Be noisy when doing what it does                            
  -h, --help                 Display this message                        
</code>

Assuming a bash shell, here are some example usages:

Print out the tags for a single file
<code language="sh">
./comictagger.py -p Plastic_Man_001_.zip
</code>

Print out the ComicRack tags for all CBZ files in the folder
<code language="sh">
./comictagger.py -p -t cr *.cbz
</code>

Delete the ComicBookLover tags for all CBR files in the folder
<code language="sh">
./comictagger.py -d -t cbl *.cbr
</code>

Set the ComicRack tags from online for a single file, using the filename to search
<code language="sh">
./comictagger.py -s -t cr -f  -o Plastic_Man_001_.cbr
</code>

Set the ComicRack tags from online for a single file, using the specified tags to search
<code language="sh">
./comictagger.py -s -t cr -m "series=Plastic Man,issue=1"  -o PlasMan001.cbr
</code>

Set the ComicBookLover Publisher tag for a list of files
<code language="sh">
./comictagger.py -s -t cbl -m "publisher=Quality Comics"   Plastic\ Man*.*
</code>

As above, but in "dry run" mode, where it just displays what would be saved
<code language="sh">
./comictagger.py -n -s -t cbl -m "publisher=Quality Comics"   Plastic\ Man*.*
</code>

Rename a file based on ComicRack tags
<code language="sh">
./comictagger.py -r -t cr PlasticManOne.cbz
</code>